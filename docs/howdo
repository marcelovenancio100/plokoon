mvn compile dependency:copy-dependencies -DincludeScope=runtime â€“U

docker build -t aws-lambda .

docker run -d --name aws-lambda -p 9000:8080 aws-lambda

-Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb


##### V1
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-lambda-java-runtime-interface-client</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-dynamodb</artifactId>
		    <version>1.12.272</version>
		</dependency>
		<dependency>
		    <groupId>com.github.derjust</groupId>
		    <artifactId>spring-data-dynamodb</artifactId>
		    <version>5.1.0</version>
		</dependency>


##### V2
		<dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>software.amazon.awssdk</groupId>
					<artifactId>bom</artifactId>
					<version>2.19.33</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
			</dependencies>
		</dependencyManagement>


		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>dynamodb</artifactId>
		</dependency>
		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>dynamodb-enhanced</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<version>2.7.8</version>
		</dependency>
		
		
		
		
{
  "name": "general",
  "email": "general@email.com",
  "batles": 259,
  "victories": 258,
  "defeats": 1
}


aws.dynamodb.endpoint=http://dynamodb-local:8000
aws.accesskey=local
aws.secretkey=local
aws.region=us-west-2